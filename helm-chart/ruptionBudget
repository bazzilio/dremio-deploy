---
# Source: dremio/templates/zookeeper.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
# Source: dremio/templates/dremio-registry-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
 name: dremio-ee
data:
 .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJiYXp6aWxpbyIsInBhc3N3b3JkIjoiNUpBKXhhU0xXLDVQWCl6IiwiYXV0aCI6IlltRjZlbWxzYVc4Nk5VcEJLWGhoVTB4WExEVlFXQ2w2In19fQ==
type: kubernetes.io/dockerconfigjson

apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL3JlZ2lzdHJ5LnRlY2hsYWIuczcucnUvdjEvIjp7InVzZXJuYW1lIjoidi5yb21hbmVldiIsInBhc3N3b3JkIjoidFNxbDg4REQiLCJhdXRoIjoiZGk1eWIyMWhibVZsZGpwMFUzRnNPRGhFUkE9PSJ9fX0=
kind: Secret
metadata:
  name: techlab-registry
  namespace: daas-prod
type: kubernetes.io/dockerconfigjson
---
# Source: dremio/templates/dremio-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dremio-config
data:
  core-site.xml: |
    <?xml version="1.0"?>
    <configuration>
      <!-- If you are editing any content in this file, please remove lines with double curly braces around them -->
      <!-- S3 Configuration Section -->
      <property>
        <name>fs.dremioS3.impl</name>
        <description>The FileSystem implementation. Must be set to com.dremio.plugins.s3.store.S3FileSystem</description>
        <value>com.dremio.plugins.s3.store.S3FileSystem</value>
      </property>
      <property>
        <name>fs.s3a.aws.credentials.provider</name>
        <description>The credential provider type.</description>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
      </property>
      <property>
        <name>fs.s3a.access.key</name>
        <description>AWS access key ID.</description>
        <value>edp-dremio-rw</value>
      </property>
      <property>
        <name>fs.s3a.secret.key</name>
        <description>AWS secret key.</description>
        <value>G2sLd0vIih7HjbsB6Js14tT8</value>
      </property>
      <property>
         <name>fs.s3a.endpoint</name>
         <description>Endpoint can either be an IP or a hostname, where Minio server is running . However the endpoint value cannot contain the http(s) prefix. E.g. 175.1.2.3:9000 is a valid endpoint. </description>
         <value>staas.s7.aero:443</value>
      </property>
      <property>
         <name>fs.s3a.path.style.access</name>
         <description>Value has to be set to true.</description>
         <value>true</value>
      </property>
      <property>
         <name>dremio.s3.compat</name>
         <description>Value has to be set to true.</description>
         <value>true</value>
      </property>
      <!-- ADLS Configuration Section -->
      <!-- Azure Storage v2 Configuration Section -->
    </configuration>
  dremio-env: |
    #
    # Copyright (C) 2017-2018 Dremio Corporation
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
  
    #
    # Dremio environment variables used by Dremio daemon
    #
  
    #
    # Directory where Dremio logs are written
    # Default to $DREMIO_HOME/log
    #
    #DREMIO_LOG_DIR=${DREMIO_HOME}/log
  
    #
    # Send logs to console and not to log files. The DREMIO_LOG_DIR is ignored if set.
    #
    #DREMIO_LOG_TO_CONSOLE=1
  
    #
    # Directory where Dremio pidfiles are written
    # Default to $DREMIO_HOME/run
    #
    #DREMIO_PID_DIR=${DREMIO_HOME}/run
  
    #
    # Max total memory size (in MB) for the Dremio process
    #
    # If not set, default to using max heap and max direct.
    #
    # If both max heap and max direct are set, this is not used
    # If one is set, the other is calculated as difference
    # of max memory and the one that is set.
    #
    #DREMIO_MAX_MEMORY_SIZE_MB=
  
    #
    # Max heap memory size (in MB) for the Dremio process
    #
    # Default to 4096 for server
    #
    #DREMIO_MAX_HEAP_MEMORY_SIZE_MB=4096
  
    #
    # Max direct memory size (in MB) for the Dremio process
    #
    # Default to 8192 for server
    #
    #DREMIO_MAX_DIRECT_MEMORY_SIZE_MB=8192
  
    #
    # Max permanent generation memory size (in MB) for the Dremio process
    # (Only used for Java 7)
    #
    # Default to 512 for server
    #
    #DREMIO_MAX_PERMGEN_MEMORY_SIZE_MB=512
  
    #
    # Garbage collection logging is enabled by default. Set the following
    # parameter to "no" to disable garbage collection logging.
    #
    #DREMIO_GC_LOGS_ENABLED="yes"
  
    #
    # The scheduling priority for the server
    #
    # Default to 0
    #
    # DREMIO_NICENESS=0
    #
  
    #
    # Number of seconds after which the server is killed forcibly it it hasn't stopped
    #
    # Default to 120
    #
    #DREMIO_STOP_TIMEOUT=120
  
    # Extra Java options - shared between dremio and dremio-admin commands
    #
    #DREMIO_JAVA_EXTRA_OPTS=
  
    # Extra Java options - client only (dremio-admin command)
    #
    #DREMIO_JAVA_CLIENT_EXTRA_OPTS=
  
    # Extra Java options - server only (dremio command)
    #
    #DREMIO_JAVA_SERVER_EXTRA_OPTS=
  dremio.conf: |
    #
    # Copyright (C) 2017-2018 Dremio Corporation
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
  
    paths: {
      # Local path for dremio to store data.
      local: ${DREMIO_HOME}"/data"
      # Distributed path Dremio data including job results, downloads,
      # uploads, etc
      results: "pdfs://"${paths.local}"/results"
      dist: "dremioS3:///edp-dremio/"
    }
  
    services: {
      # The services running are controlled via command line options passed in
      # while starting the services via kubernetes. Updating the three values
      # below will not impact what services are running.
      #   coordinator.enabled: true,
      #   coordinator.master.enabled: true,
      #   executor.enabled: true
      #
      # Other service parameters can be customized via this file.
  
      # Cloud Cache is supported in Dremio 4.0.0+.
      executor: {
        cache: {
          path.db: "/var/lib/dremio",
          path.fs: ["/var/lib/dremio"],
          pctquota.db: 70,
          pctquota.fs: [70]
        }
      }
    }
    debug: {
      # Enable caching for distributed storage, it is turned off by default
      dist.caching.enabled: true,
      # Max percent of total available cache space to use when possible
      # for distributed storage
      dist.max.cache.space.percent: 100
    }
  logback-access.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!--
  
        Copyright (C) 2017-2018 Dremio Corporation
  
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
  
            http://www.apache.org/licenses/LICENSE-2.0
  
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
  
    -->
    <configuration>
  
      <!-- The following appender is only available if dremio.log.path is defined -->
      <if condition='isDefined("dremio.log.path")'>
        <then>
          <appender name="access-text" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/access.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/access.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder>
              <pattern>combined</pattern>
            </encoder>
          </appender>
  
          <appender-ref ref="access-text" />
        </then>
        <else>
          <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
              <pattern>combined</pattern>
            </encoder>
          </appender>
  
          <appender-ref ref="console"/>
        </else>
      </if>
    </configuration>
  logback-admin.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!--
  
        Copyright (C) 2017-2018 Dremio Corporation
  
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
  
            http://www.apache.org/licenses/LICENSE-2.0
  
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
  
    -->
    <configuration>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%msg%n%ex{0}%n</pattern>
        </encoder>
      </appender>
  
  
      <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>${dremio.admin.log.verbosity:-OFF}</level>
        </filter>
        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{30} - %msg%n</pattern>
        </encoder>
      </appender>
  
  
      <if condition='isDefined("dremio.admin.log.path")'>
        <then>
          <appender name="ADMINLOG" class="ch.qos.logback.core.FileAppender">
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
              <level>${dremio.admin.log.verbosity:-OFF}</level>
            </filter>
            <file>${dremio.admin.log.path}</file>
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
        </then>
      </if>
  
      <logger name="admin" level="INFO" additivity="true">
        <appender-ref ref="STDOUT"/>
      </logger>
  
      <root>
        <level value="${dremio.admin.log.verbosity:-OFF}"/>
        <if condition='isDefined("dremio.admin.log.path")'>
          <then>
            <appender-ref ref="ADMINLOG"/>
          </then>
          <else>
            <appender-ref ref="CONSOLE"/>
          </else>
        </if>
      </root>
  
    </configuration>
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!--
  
        Copyright (C) 2017-2018 Dremio Corporation
  
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
  
            http://www.apache.org/licenses/LICENSE-2.0
  
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
  
    -->
    <configuration>
      <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>
      <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>
  
      <!-- The following appenders are only available if dremio.log.path is defined -->
      <if condition='isDefined("dremio.log.path")'>
        <then>
          <appender name="text" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/server.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/server.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
  
          <appender name="metadata_refresh" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/metadata_refresh.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/metadata_refresh.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
            </rollingPolicy>
  
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
  
          <appender name="json" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/json/server.json</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/json/archive/server.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
              <providers>
                <pattern><pattern>{"timestamp": "%date{ISO8601}", "host":"${HOSTNAME}" }</pattern></pattern>
                <threadName><fieldName>thread</fieldName></threadName>
                <logLevel><fieldName>levelName</fieldName></logLevel>
                <logLevelValue><fieldName>levelValue</fieldName></logLevelValue>
                <loggerName><fieldName>logger</fieldName></loggerName>
                <message><fieldName>message</fieldName></message>
                <arguments />
                <stackTrace />
              </providers>
            </encoder>
          </appender>
  
          <appender name="query" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/queries.json</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/queries.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder>
              <pattern>%msg%n</pattern>
            </encoder>
          </appender>
        </then>
      </if>
  
      <logger name="com.dremio">
        <level value="${dremio.log.level:-info}"/>
      </logger>
  
      <logger name="query.logger">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="query"/>
          </then>
        </if>
      </logger>
  
      <logger name="com.dremio.exec.catalog.SourceMetadataManager" additivity="false">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="metadata_refresh"/>
          </then>
        </if>
      </logger>
  
      <logger name="com.dremio.exec.store.hive.HiveClient" additivity="false">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="metadata_refresh"/>
          </then>
        </if>
      </logger>
  
      <logger name="hive.deprecated.function.warning.logger" level="warn">
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <additivity value ="false"/>
            <appender name="text" class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>${dremio.log.path}/hive.deprecated.function.warning.log</file>
              <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${dremio.log.path}/archive/hive.deprecated.function.warning.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
                <maxHistory>30</maxHistory>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                  <maxFileSize>100MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
              </rollingPolicy>
  
              <encoder>
                <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
            </appender>
          </then>
        </if>
      </logger>
  
      <root>
        <level value="${dremio.log.root.level:-error}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="text"/>
            <appender-ref ref="json"/>
          </then>
          <else>
            <appender-ref ref="console"/>
          </else>
        </if>
      </root>
  
    </configuration>
---
# Source: dremio/templates/dremio-service-client.yaml
apiVersion: v1
kind: Service
metadata:
  name: dremio-client
  labels:
    app: dremio-client
spec:
  ports:
  - port: 31010
    targetPort: 31010
    name: client
  - port: 9047
    targetPort: 9047
    name: web
  selector:
    app: dremio-coordinator
  type: ClusterIP
---
# Source: dremio/templates/dremio-service-client.yaml
apiVersion: v1
kind: Service
metadata:
  name: dremio-cluster-pod
spec:
  ports:
  - port: 9999
  clusterIP: None
  selector:
    role: dremio-cluster-pod
---
# Source: dremio/templates/zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
# Source: dremio/templates/zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
# Source: dremio/templates/dremio-coordinator.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-coordinator
spec:
  serviceName: "dremio-cluster-pod"
  replicas: 0
  podManagementPolicy: "Parallel"
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dremio-coordinator
  template:
    metadata:
      labels:
        app: dremio-coordinator
        role: dremio-cluster-pod
      annotations:
        dremio-configmap/checksum: 3c6a77282a4129ddc501a1b75c11c7a3513bf9f6d0f3cb3988e14938b472bfcb
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: dremio-coordinator
        image: registry.techlab.s7.ru/edp/dremio-ee:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 16384M
            cpu: 15
        volumeMounts:
        - name: dremio-config
          mountPath: /opt/dremio/conf
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "4096"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "12288"
        - name: DREMIO_JAVA_EXTRA_OPTS
          value: >-
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.master.enabled=false
            -Dservices.executor.enabled=false
        command: ["/opt/dremio/bin/dremio"]
        args:
        - "start-fg"
        ports:
        - containerPort: 9047
          name: web
        - containerPort: 31010
          name: client
        - containerPort: 45678
          name: server
      initContainers:
      - name: wait-for-zk
        image: busybox
        command:  ["sh", "-c", "until nc -z dremio-client 9047 > /dev/null; do echo waiting for dremio master; sleep 2; done;"]
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      imagePullSecrets:
        - name: techlab-registry
---
# Source: dremio/templates/dremio-executor.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-executor
spec:
  serviceName: "dremio-cluster-pod"
  replicas: 0
  podManagementPolicy: "Parallel"
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dremio-executor
  template:
    metadata:
      labels:
        app: dremio-executor
        role: dremio-cluster-pod
      annotations:
        dremio-configmap/checksum: 3c6a77282a4129ddc501a1b75c11c7a3513bf9f6d0f3cb3988e14938b472bfcb
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: dremio-executor
        image: registry.techlab.s7.ru/edp/dremio-ee:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 16384M
            cpu: 15
        volumeMounts:
        - name: dremio-executor-volume
          mountPath: /opt/dremio/data
        - name: dremio-config
          mountPath: /opt/dremio/conf
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "4096"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "12288"
        - name: DREMIO_JAVA_EXTRA_OPTS
          value: >-
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.enabled=false
        command: ["/opt/dremio/bin/dremio"]
        args:
        - "start-fg"
        ports:
        - containerPort: 45678
          name: server
      initContainers:
      - name: wait-for-zk
        image: busybox
        command:  ["sh", "-c", "until ping -c 1 -W 1 zk-hs > /dev/null; do echo waiting for zookeeper host; sleep 2; done;"]
      # since we're mounting a separate volume, reset permission to
      # dremio uid/gid
      - name: chown-data-directory
        image: registry.techlab.s7.ru/edp/dremio-ee:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: dremio-executor-volume
          mountPath: /opt/dremio/data
        command: ["chown"]
        args:
        - "dremio:dremio"
        - "/opt/dremio/data"
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      imagePullSecrets:
        - name: techlab-registry
  volumeClaimTemplates:
  - metadata:
      name: dremio-executor-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
# Source: dremio/templates/dremio-master.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-master
spec:
  serviceName: "dremio-cluster-pod"
  replicas: 1
  selector:
    matchLabels:
      app: dremio-coordinator
  template:
    metadata:
      labels:
        app: dremio-coordinator
        role: dremio-cluster-pod
      annotations:
        dremio-configmap/checksum: 3c6a77282a4129ddc501a1b75c11c7a3513bf9f6d0f3cb3988e14938b472bfcb
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - dremio-master
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 5
      containers:
      - name: dremio-master-coordinator
        image: registry.techlab.s7.ru/edp/dremio-ee:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 16384M
            cpu: 15
          limits:
            memory: 16384M
            cpu: 15
        volumeMounts:
        - name: dremio-master-volume
          mountPath: /opt/dremio/data
        - name: dremio-config
          mountPath: /opt/dremio/conf
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "4096"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "12288"
        - name: DREMIO_JAVA_EXTRA_OPTS
          value: >-
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.master.embedded-zookeeper.enabled=false
            -Dservices.executor.enabled=false
        command: ["/opt/dremio/bin/dremio"]
        args:
        - "start-fg"
        ports:
        - containerPort: 9047
          name: web
        - containerPort: 31010
          name: client
        - containerPort: 45678
          name: server
        readinessProbe:
          httpGet:
            path: /
            port: 9047
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: start-only-one-master
        image: registry.techlab.s7.ru/edp/busybox
        command: ["sh", "-c", "INDEX=${HOSTNAME##*-}; if [ $INDEX -ne 0 ]; then echo Only one master should be running.; exit 1; fi; "]
      - name: wait-for-zk
        #image: registry.techlab.s7.ru/edp/busybox
        #command:  ["sh", "-c", "until ping -c 1 -W 1 zk-hs > /dev/null; do echo waiting for zookeeper host; sleep 2; done;"]
        image: registry.techlab.s7.ru/edp/wait-for-it
        command: [ "/wait-for-it.sh", "zk-hs:2181" ]

      # since we're mounting a separate volume, reset permission to dremio uid/gid
#      - name: chown-data-directory
#        image: registry.techlab.s7.ru/edp/dremio-ee:latest
#        imagePullPolicy: IfNotPresent
#        securityContext:
#          runAsUser: 0
#        volumeMounts:
#        - name: dremio-master-volume
#          mountPath: /opt/dremio/data
#        command: ["chown"]
#        args:
#        - "dremio:dremio"
#        - "/opt/dremio/data"
      - name: upgrade-task
        image: registry.techlab.s7.ru/edp/dremio-ee:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: dremio-master-volume
          mountPath: /opt/dremio/data
        command: ["/opt/dremio/bin/dremio-admin"]
        args:
        - "upgrade"
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      imagePullSecrets:
        - name: techlab-registry
  volumeClaimTemplates:
  - metadata:
      name: dremio-master-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
# Source: dremio/templates/zookeeper.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zk
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        #image: "k8s.gcr.io/kubernetes-zookeeper:1.0-3.4.10"
        image: "registry.techlab.s7.ru/edp/kubernetes-zookeeper:1.0-3.4.10"
        resources:
          requests:
            memory: "1024M"
            cpu: "0.5"
          limits:
            memory: "1024M"
            cpu: "0.5"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
          --servers=3 \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port=2181 \
          --election_port=3888 \
          --server_port=2888 \
          --tick_time=2000 \
          --init_limit=10 \
          --sync_limit=5 \
          --heap=512M \
          --max_client_cnxns=60 \
          --snap_retain_count=3 \
          --purge_interval=12 \
          --max_session_timeout=40000 \
          --min_session_timeout=4000 \
          --log_level=INFO"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      imagePullSecrets:
        - name: techlab-registry
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
# Source: dremio/templates/dremio-ingress.yaml
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  annotations:
    certmanager.k8s.io/issuer: vault-daas
  name: infra-daas-client-s7-aero
  namespace: daas-prod
  labels:
    app: dremio-client
spec:
  tls:
    - hosts:
        - dremio.common12p24.epaas.s7.aero
      secretName: dremio.common12p24.epaas.s7.aero
  rules:
    - host: dremio.common12p24.epaas.s7.aero
      http:
        paths:
          - path: /
            backend:
              serviceName: dremio-client
              servicePort: 9047
